<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">

    <security:http pattern="/resources/**" security="none" />

    <security:http pattern="/favicon.ico" security="none" />

    <security:http pattern="/login*" security="none"/>
    <security:http pattern="/vacation_approval/***" security="none"/>
    <security:http pattern="/vacation_approval*" security="none"/>

<!-- 
    <security:http use-expressions="true"  entry-point-ref="spnegoEntryPoint">
 -->    
    <security:http auto-config="true" use-expressions="true">
        <security:remember-me services-ref="rememberService"/>
        <security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/managertools/**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_MANAGER')"/>
        <security:intercept-url pattern="/managertools" access="hasAnyRole('ROLE_ADMIN', 'ROLE_MANAGER')"/>
        <security:intercept-url pattern="/timesheetDel/**" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/adminMessage" access="isAnonymous()"/>
        <security:intercept-url pattern="/planEdit" access="hasAnyRole('ROLE_PLAN_EDIT', 'ROLE_PLAN_VIEW')" method="GET" />
        <security:intercept-url pattern="/planEdit/**" access="hasAnyRole('ROLE_PLAN_EDIT', 'ROLE_PLAN_VIEW')"
                                method="GET" />
        <security:intercept-url pattern="/planEdit" access="hasRole('ROLE_PLAN_EDIT')" method="POST" />
        <security:intercept-url pattern="/planEdit/**" access="hasRole('ROLE_PLAN_EDIT')" method="POST" />
        <security:intercept-url pattern="/createPlanForPeriod" access="hasRole('ROLE_PLAN_EDIT')" />
        <security:intercept-url pattern="/createPlanForPeriod/**" access="hasRole('ROLE_PLAN_EDIT')" />
        <security:intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>
        <security:form-login  login-page="/login" default-target-url="/timesheet"
                                            authentication-failure-url="/loginfailed"/>
        <security:logout logout-url="/logout" logout-success-url="/login"/>
<!--
		<security:custom-filter ref="spnegoAuthenticationProcessingFilter" position="BASIC_AUTH_FILTER" />
 -->
    </security:http>
    
    <security:authentication-manager>
        <security:authentication-provider ref="rememberMeAuthenticationProvider"/>
        <security:authentication-provider ref="ldapAuthProvider"/>
    </security:authentication-manager>
 
    <bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"/>

    <!-- SPNEGO
 	
	<bean id="spnegoEntryPoint" class="org.springframework.security.extensions.kerberos.web.SpnegoEntryPoint" />
	
	<bean id="spnegoAuthenticationProcessingFilter" class="org.springframework.security.extensions.kerberos.web.SpnegoAuthenticationProcessingFilter">
		<property name="authenticationManager" ref="authenticationManager" />
	</bean>
	
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider ref="kerberosServiceAuthenticationProvider" />
	</security:authentication-manager>
	
	<bean id="kerberosServiceAuthenticationProvider" class="org.springframework.security.extensions.kerberos.KerberosServiceAuthenticationProvider">
		<property name="ticketValidator">
			<bean class="org.springframework.security.extensions.kerberos.SunJaasKerberosTicketValidator">
				<property name="servicePrincipal" value="HTTP/timesheet.aplana.com" />
				<property name="keyTabLocation" value="classpath:http-web.keytab" />
				<property name="debug" value="true" />
			</bean>
		</property>
		<property name="userDetailsService" ref="userDetailsService" />
	</bean>
	
	<bean id="userSearch" class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
	    <constructor-arg value="cn=Users" />
	    <constructor-arg value="(userPrincipalName={0})" />
		<constructor-arg ref="contextSource" />
	</bean>
	
   	<bean id="userDetailsService" class="org.springframework.security.ldap.userdetails.LdapUserDetailsService">
              		<constructor-arg ref="userSearch" />
   	    <property name="userDetailsMapper" ref="myLdapUserDetailsService"/>
   	</bean>
   	<bean id="userDetailsManager" class="org.springframework.security.ldap.userdetails.LdapUserDetailsManager">
              		<constructor-arg ref="contextSource" />
   	    <property name="userDetailsMapper" ref="myLdapUserDetailsService"/>
   	    <property name="usernameMapper">
   	        <bean class="org.springframework.security.ldap.DefaultLdapUsernameToDnMapper">
   	            <constructor-arg value="cn=users" />
   	            <constructor-arg value="userPrincipalName" />
   	        </bean>
   	    </property>
   	    <property name="groupSearchBase" value="cn=Users" />
   	    <property name="groupMemberAttributeName" value="member" />
   	</bean>
    /SPNEGO -->
</beans>